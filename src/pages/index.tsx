import Head from 'next/head'
import Image from 'next/image'
import {Inter} from '@next/font/google'
import styles from '@/styles/Home.module.css'
import {z} from 'zod'
import {SubmitHandler, useForm} from "react-hook-form";
import {zodResolver} from "@hookform/resolvers/zod";
import {useEffect} from "react";

const developmentLanguageSchema = z.union([z.literal('typescript'), z.literal('go'), z.literal('rust')])
const toolSchema = z.union([z.literal('Adobe XD'), z.literal('Figma'), z.literal('Sketch')])
const schema = z.union([
    z.object({
        job: z.literal('engineer'),
        language: developmentLanguageSchema,
        graduate: z.literal('bachelor'),
    }),
    z.object({
        job: z.literal('engineer'),
        language: developmentLanguageSchema,
        graduate: z.literal('master'),
        url: z.string().url()
    }),
    z.object({
        job: z.literal('designer'),
        tool: toolSchema,
        graduate: z.literal('bachelor'),
    }),
    z.object({
        job: z.literal('designer'),
        tool: toolSchema,
        graduate: z.literal('master'),
        url: z.string().url()
    })
]).refine(data => {
    return true
})
type FormType = z.infer<typeof schema>
export default function Home() {
    const {
        handleSubmit,
        formState: {errors},
        register,
        watch
    } = useForm<FormType>({
        resolver: zodResolver(schema),
        defaultValues: {
            job: 'engineer',
            graduate: 'master'
        }
    })
    const watchGraduate = watch('graduate')
    const watchJob = watch('job')
    const onSubmit: SubmitHandler<FormType> = (form) => {
        console.log(form)
    }
    useEffect(() => {
        console.log(errors)
    }, [errors])
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main className={styles.main}>
                <form onSubmit={handleSubmit(onSubmit)}>
                    <div style={{display: 'flex'}}>
                        <div>
                            <label>Job:</label>
                            <select {...register('job')} name={'job'}>
                                <option value={'engineer'} label={'Engineer'}></option>
                                <option value={'designer'} label={'Designer'}></option>
                            </select>
                            {'job' in errors && (<div>{errors.job?.message}</div>)}
                        </div>
                    </div>
                    {watchJob === 'engineer' && (
                        <div style={{display: 'flex'}}>
                            <div>
                                <label>Language:</label>
                                <select {...register("language")} name={'language'}>
                                    <option value={'typescript'} label={'typescript'}></option>
                                    <option value={'go'} label={'go'}></option>
                                    <option value={'rust'} label={'rust'}></option>
                                </select>
                                {'language' in errors && (<div>{errors.language?.message}</div>)}
                            </div>
                        </div>
                    )}
                    {watchJob === 'designer' && (
                        <div style={{display: 'flex'}}>
                            <div>
                                <label>Tool:</label>
                                <select {...register("tool")} name={'tool'}>
                                    <option value={'Adobe XD'} label={'Adobe XD'}></option>
                                    <option value={'Figma'} label={'Figma'}></option>
                                    <option value={'Sketch'} label={'Sketch'}></option>
                                </select>
                                {'tool' in errors && (<div>{errors.tool?.message}</div>)}
                            </div>
                        </div>
                    )}
                    <div style={{display: 'flex'}}>
                        <div>
                            <label>Graduate:</label>
                            <select {...register('graduate')} name={'graduate'}>
                                <option value={'bachelor'} label={'Bachelor'}></option>
                                <option value={'master'} label={'Master'}></option>
                            </select>
                            {'graduate' in errors && (<div>{errors.job?.message}</div>)}
                        </div>
                    </div>
                    {watchGraduate === 'master' && (
                        <div style={{display: 'flex'}}>
                            <div>
                                <label>URL:</label>
                                <input type={'url'} {...register('url')}/>
                                {'url' in errors && (<div>{errors.url?.message}</div>)}
                            </div>
                        </div>
                    )}
                    <div style={{display: 'flex'}}>
                        <div>
                            <button type={'submit'}>submit</button>
                        </div>
                    </div>
                </form>
            </main>
        </>
    )
}
